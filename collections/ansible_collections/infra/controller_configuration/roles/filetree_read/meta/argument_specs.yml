---
argument_specs:
  main:
    short_description: An Ansible Role to read from a local file tree and create objects in Controller
    options:
      orgs:
        type: str
        required: true
        description: This variable sets the organization where should be applied the configuration.
      dir_orgs_vars:
        type: str
        required: true
        description: This variable sets the directory path where the variables will be store.
      env:
        type: str
        default: dev
        required: false
        description: This variable sets the life-cycle environment to use.
      controller_location:
        type: str
        default: ''
        required: false
        description: This variable sets object location. It is useful when the configuration need to be replicated in an active/passive sites architecture
      filetree_controller_settings:
        type: raw
        default: "{{ dir_orgs_vars }}/{{ orgs }}/env/{{ env }}/controller_settings.d/"
        required: false
        description: Directory path to load controller object variables
      filetree_controller_organizations:
        type: raw
        default: "{{ dir_orgs_vars }}/{{ orgs }}/env/common/controller_organizations.d/"
        required: false
        description: Directory path to load controller object variables
      filetree_controller_labels:
        type: raw
        default: "{{ dir_orgs_vars }}/{{ orgs }}/env/common/controller_labels.d/"
        required: false
        description: Directory path to load controller object variables
      filetree_controller_user_accounts:
        type: raw
        default: "{{ dir_orgs_vars }}/{{ orgs }}/env/{{ env }}/controller_users.d/"
        required: false
        description: Directory path to load controller object variables
      filetree_controller_teams:
        type: raw
        default: "{{ dir_orgs_vars }}/{{ orgs }}/env/common/controller_teams.d/"
        required: false
        description: Directory path to load controller object variables
      filetree_controller_credential_types:
        type: raw
        default: "{{ dir_orgs_vars }}/{{ orgs }}/env/common/controller_credential_types.d/"
        required: false
        description: Directory path to load controller object variables
      filetree_controller_credentials:
        type: raw
        default: "{{ dir_orgs_vars }}/{{ orgs }}/env/{{ env }}/controller_credentials.d/"
        required: false
        description: Directory path to load controller object variables
      filetree_controller_credential_input_sources:
        type: raw
        default: "{{ dir_orgs_vars }}/{{ orgs }}/env/common/controller_credential_input_sources.d/"
        required: false
        description: Directory path to load controller object variables
      filetree_controller_notifications:
        type: raw
        default: "{{ dir_orgs_vars }}/{{ orgs }}/env/common/controller_notification_templates.d/"
        required: false
        description: Directory path to load controller object variables
      filetree_controller_projects:
        type: raw
        default: "{{ dir_orgs_vars }}/{{ orgs }}/env/common/controller_projects.d/"
        required: false
        description: Directory path to load controller object variables
      filetree_controller_execution_environments:
        type: raw
        default: "{{ dir_orgs_vars }}/{{ orgs }}/env/{{ env }}/controller_execution_environments.d/"
        required: false
        description: Directory path to load controller object variables
      filetree_controller_applications:
        type: raw
        default: "{{ dir_orgs_vars }}/{{ orgs }}/env/common/controller_applications.d/"
        required: false
        description: Directory path to load controller object variables
      filetree_controller_inventories:
        type: raw
        default: "{{ dir_orgs_vars }}/{{ orgs }}/env/common/controller_inventories.d/"
        required: false
        description: Directory path to load controller object variables
      filetree_controller_inventory_sources:
        type: raw
        default: "{{ dir_orgs_vars }}/{{ orgs }}/env/{{ env }}/controller_inventory_sources.d/"
        required: false
        description: Directory path to load controller object variables
      filetree_controller_instance_groups:
        type: raw
        default: "{{ dir_orgs_vars }}/{{ orgs }}/env/{{ env }}/controller_instance_groups.d/"
        required: false
        description: Directory path to load controller object variables
      filetree_controller_hosts:
        type: raw
        default: "{{ dir_orgs_vars }}/{{ orgs }}/env/{{ env }}/controller_hosts.d/"
        required: false
        description: Directory path to load controller object variables
      filetree_controller_groups:
        type: raw
        default: "{{ dir_orgs_vars }}/{{ orgs }}/env/common/controller_groups.d/"
        required: false
        description: Directory path to load controller object variables
      filetree_controller_templates:
        type: raw
        default: "{{ dir_orgs_vars }}/{{ orgs }}/env/common/controller_job_templates.d/"
        required: false
        description: Directory path to load controller object variables
      filetree_controller_workflow_job_templates:
        type: raw
        default: "{{ dir_orgs_vars }}/{{ orgs }}/env/common/controller_workflow_job_templates.d/"
        required: false
        description: Directory path to load controller object variables
      filetree_controller_schedules:
        type: raw
        default: "{{ dir_orgs_vars }}/{{ orgs }}/env/common/controller_schedules.d/"
        required: false
        description: Directory path to load controller object variables
      filetree_controller_roles:
        type: raw
        default: "{{ dir_orgs_vars }}/{{ orgs }}/env/common/controller_roles.d/"
        required: false
        description: Directory path to load controller object variables

      # Async variables
      controller_configuration_async_retries:
        default: 30
        required: false
        description: This variable sets number of retries across all roles as a default.
      controller_configuration_async_delay:
        default: 1
        required: false
        description: This variable sets delay between retries across all roles as a default.


      # No_log variables
      controller_configuration_filetree_create_secure_logging:
        default: "{{ controller_configuration_secure_logging | default(false) }}"
        required: false
        type: bool
        description: Whether or not to include the sensitive tasks from this role in the log. Set this value to `true` if you will be providing your sensitive values from elsewhere.
      controller_configuration_secure_logging:
        default: false
        required: false
        type: bool
        description: This variable enables secure logging across all roles as a default.

      # Generic across all roles
      controller_state:
        default: present
        required: false
        description: The state all objects will take unless overridden by object default
        type: str
      controller_hostname:
        default: None
        required: false
        description: URL to the Ansible Controller Server.
        type: str
      controller_validate_certs:
        default: true
        required: false
        description: Whether or not to validate the Ansible Controller Server's SSL certificate.
        type: str
      controller_username:
        default: None
        required: false
        description: Admin User on the Ansible Controller Server. Either username / password or oauthtoken need to be specified.
        type: str
      controller_password:
        default: None
        required: false
        description: Controller Admin User's password on the Ansible Controller Server. This should be stored in an Ansible Vault at vars/controller-secrets.yml or elsewhere and called from a parent playbook. Either username / password or oauthtoken need to be specified.
        type: str
      controller_oauthtoken:
        default: None
        required: false
        description: Controller Admin User's token on the Ansible Controller Server. This should be stored in an Ansible Vault at or elsewhere and called from a parent playbook. Either username / password or oauthtoken need to be specified.
        type: str
...
