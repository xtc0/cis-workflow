---
- name: "Get the constructed inventories from the API"
  ansible.builtin.set_fact:
    constructed_inventory_lookvar: "{{ query(controller_api_plugin, 'api/v2/constructed_inventories/',
                                             query_params=(query_params | combine({'organization': organization_id})) if organization_id is defined else query_params,
                                             host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs,
                                             return_all=true, max_objects=query_controller_api_max_objects)
                                    }}"
  vars:
    query_params:
      order_by: 'organization,id'
  no_log: "{{ controller_configuration_filetree_create_secure_logging }}"

- name: "Block for to generate flatten output"
  when:
    - flatten_output is defined
    - flatten_output | bool
  vars:
    __dest: "{{ output_path }}/inventories.yaml"
  block:
    - name: "Stat if the output file exists"
      ansible.builtin.stat:
        path: "{{ __dest }}"
      register: __constructed_inventories_file

    - name: "Remove the yaml finalizer if it's already present"
      ansible.builtin.lineinfile:
        path: "{{ __dest }}"
        line: "..."
        state: absent
      when: __constructed_inventories_file.stat.exists | bool

    - name: "Add current constructed inventory to the inventories flat file"
      ansible.builtin.blockinfile:
        create: true
        mode: "0644"
        insertafter: EOF
        path: "{{ __dest }}"
        marker: ""
        block: "{{ lookup('template', 'templates/current_inventories.j2') }}"
      vars:
        inventory_organization: "{{ current_inventories_asset_value.summary_fields.organization.name | default('ORGANIZATIONLESS') }}"
        inventory_name: "{{ current_inventories_asset_value.name | regex_replace('/', '_') }}"
        first_inventory: "{{ not (__constructed_inventories_file.stat.exists | bool) }}"
        last_inventory: "{{ current_inventory_index == ((constructed_inventory_lookvar | length) - 1) }}"
      loop: "{{ constructed_inventory_lookvar }}"
      loop_control:
        index_var: current_inventory_index
        loop_var: current_inventories_asset_value
        label: "{{ __dest }}"

    - name: "Remove all the blank lines introduced by the last task"
      ansible.builtin.lineinfile:
        path: "{{ __dest }}"
        line: ''
        state: absent

- name: "Block for to generate the filetre_create normal output"
  when: flatten_output is not defined or not (flatten_output | bool)
  block:
    - name: "Create the <ORGANIZATION_NAME>/inventories output directory for inventories in {{ output_path }}"
      ansible.builtin.file:
        path: "{{ __path }}"
        state: directory
        mode: '0755'
      vars:
        inventory_organization: "{{ needed_path.summary_fields.organization.name | default('ORGANIZATIONLESS') }}"
        inventory_name: "{{ needed_path.name | regex_replace('/', '_') }}"
        __path: "{{ output_path }}/{{ inventory_organization | regex_replace('/', '_') }}/inventories/{{ inventory_name | regex_replace('/', '_') }}"
      loop: "{{ constructed_inventory_lookvar }}"
      loop_control:
        loop_var: needed_path
        label: "{{ __path }}"

    - name: "Add current constructed_inventories to the <ORGANIZATION_NAME>/inventories output yaml file in {{ output_path }}"
      ansible.builtin.template:
        src: "templates/current_inventories.j2"
        dest: "{{ __dest }}"
        mode: '0644'
      vars:
        inventory_organization: "{{ current_inventories_asset_value.summary_fields.organization.name | default('ORGANIZATIONLESS') }}"
        inventory_name: "{{ current_inventories_asset_value.name | regex_replace('/', '_') }}"
        __dest: "{{ output_path }}/{{ inventory_organization | regex_replace('/', '_') }}/inventories/{{ inventory_name | regex_replace('/', '_') }}/{{ current_inventories_asset_value.id }}_{{ inventory_name | regex_replace('/', '_') }}.yaml"
      loop: "{{ constructed_inventory_lookvar }}"
      loop_control:
        loop_var: current_inventories_asset_value
        label: "{{ __dest }}"
...
