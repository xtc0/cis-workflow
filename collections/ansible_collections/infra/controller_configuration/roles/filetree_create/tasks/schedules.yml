---
- name: "Get current Schedules from the API"
  ansible.builtin.set_fact:
    schedules_lookvar: "{{ query(controller_api_plugin, 'api/v2/schedules/',
                                host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs,
                                return_all=true, max_objects=query_controller_api_max_objects)
                       }}"
  no_log: "{{ controller_configuration_filetree_create_secure_logging }}"

- name: "Block for to generate flatten output"
  when:
    - flatten_output is defined
    - flatten_output | bool
  vars:
    __dest: "{{ output_path }}/schedules.yaml"
  block:
    - name: "Add current schedules to the schedules flat file"
      ansible.builtin.blockinfile:
        create: true
        mode: "0644"
        insertafter: EOF
        path: "{{ __dest }}"
        marker: ""
        block: "{{ lookup('template', 'templates/current_schedules.j2') }}"
      vars:
        label_id: "{{ current_schedules_asset_value.id }}"
        label_name: "{{ current_schedules_asset_value.name | regex_replace('/', '_') }}"
        query_credentials: "{{ query(controller_api_plugin, current_schedules_asset_value.related.credentials,
                     host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs,
                     return_all=true, max_objects=query_controller_api_max_objects) if current_schedules_asset_value.related.credentials is defined else [] }}"
        query_instance_groups: "{{ query(controller_api_plugin, current_schedules_asset_value.related.instance_groups,
                     host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs,
                     return_all=true, max_objects=query_controller_api_max_objects) if current_schedules_asset_value.related.instance_groups is defined else [] }}"
        query_labels: "{{ query(controller_api_plugin, current_schedules_asset_value.related.labels,
                     host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs,
                     return_all=true, max_objects=query_controller_api_max_objects) if current_schedules_asset_value.related.labels is defined else [] }}"
        last_schedule: "{{ current_schedule_index == ((schedules_lookvar | length) - 1) }}"
      loop: "{{ schedules_lookvar }}"
      loop_control:
        index_var: current_schedule_index
        loop_var: current_schedules_asset_value
        label: "{{ __dest }}"

    - name: "Remove all the blank lines introduced by the last task"
      ansible.builtin.lineinfile:
        path: "{{ __dest }}"
        line: ''
        state: absent

- name: "Block for to generate the filetre_create normal output"
  when: flatten_output is not defined or not (flatten_output | bool)
  block:
    - name: "Create the schedules output directory for schedules in {{ output_path }}"
      ansible.builtin.file:
        path: "{{ output_path }}/schedules"
        state: directory
        mode: '0755'

    - name: "Add current schedules to the schedules output file in {{ output_path }}"
      ansible.builtin.template:
        src: "templates/current_schedules.j2"
        dest: "{{ __dest }}"
        mode: '0644'
      vars:
        label_id: "{{ current_schedules_asset_value.id }}"
        label_name: "{{ current_schedules_asset_value.name | regex_replace('/', '_') }}"
        __dest: "{{ output_path }}/schedules/{{ label_id }}_{{ label_name | regex_replace('/', '_') }}.yaml"
        query_credentials: "{{ query(controller_api_plugin, current_schedules_asset_value.related.credentials,
                     host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs,
                     return_all=true, max_objects=query_controller_api_max_objects) if current_schedules_asset_value.related.credentials is defined else [] }}"
        query_instance_groups: "{{ query(controller_api_plugin, current_schedules_asset_value.related.instance_groups,
                     host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs,
                     return_all=true, max_objects=query_controller_api_max_objects) if current_schedules_asset_value.related.instance_groups is defined else [] }}"
        query_labels: "{{ query(controller_api_plugin, current_schedules_asset_value.related.labels,
                     host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs,
                     return_all=true, max_objects=query_controller_api_max_objects) if current_schedules_asset_value.related.labels is defined else [] }}"
      loop: "{{ schedules_lookvar }}"
      loop_control:
        loop_var: current_schedules_asset_value
        label: "{{ __dest }}"
...
