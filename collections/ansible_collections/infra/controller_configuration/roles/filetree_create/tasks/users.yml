---
- name: "Get current Users from the API"
  ansible.builtin.set_fact:
    users_lookvar: "{{ query(controller_api_plugin, 'api/v2/users/',
                             host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs,
                             return_all=true, max_objects=query_controller_api_max_objects)
                    }}"
  no_log: "{{ controller_configuration_filetree_create_secure_logging }}"

- name: "Add the users the Organizations information"  # noqa jinja[spacing]
  ansible.builtin.set_fact:
    current_users: "{{ (current_users | default([])) + [user_lookvar_item | combine({'organizations': user_lookvar_item_organizations if (user_lookvar_item_organizations | length > 1) else ['ORGANIZATIONLESS']})] }}"
  vars:
    user_lookvar_item_organizations: "{{ query(controller_api_plugin, user_lookvar_item.related.organizations,
                                               host=controller_hostname, oauth_token=controller_oauthtoken, verify_ssl=controller_validate_certs,
                                               return_all=true, max_objects=query_controller_api_max_objects
                                              ) | selectattr('name', 'defined') | map(attribute='name')
                                      }}"
  loop: "{{ users_lookvar }}"
  loop_control:
    loop_var: user_lookvar_item
    label: "User {{ user_lookvar_item.username }}"
  no_log: "{{ controller_configuration_filetree_create_secure_logging }}"

- name: "Block for to generate flatten output"
  when:
    - flatten_output is defined
    - flatten_output | bool
  vars:
    __dest: "{{ output_path }}/users.yaml"
  block:
    - name: "Add current users to the users flat file"
      ansible.builtin.blockinfile:
        create: true
        mode: "0644"
        insertafter: EOF
        path: "{{ __dest }}"
        marker: ""
        block: "{{ lookup('template', 'templates/current_users.j2') }}"
      vars:
        current_users_asset_value: "{{ current_user_dir.0 }}"
        last_user: "{{ current_user_index == ((users_lookvar | length) - 1) }}"
      when: organization_filter is not defined or (current_user_dir.1 is match(organization_filter))
      loop: "{{ current_users | default([]) | subelements('organizations', skip_missing=true) }}"
      loop_control:
        index_var: current_user_index
        loop_var: current_user_dir
        label: "{{ __dest }}"

    - name: "Remove all the blank lines introduced by the last task"
      ansible.builtin.lineinfile:
        path: "{{ __dest }}"
        line: ''
        state: absent

- name: "Block for to generate the filetre_create normal output"
  when: flatten_output is not defined or not (flatten_output | bool)
  block:
    - name: "Create the <ORGANIZATION_NAME> output directory for users in {{ output_path }}"
      ansible.builtin.file:
        path: "{{ __path }}"
        state: directory
        mode: '0755'
      vars:
        __path: "{{ output_path }}/{{ current_user_dir | regex_replace('/', '_') }}/users"
      when: organization_filter is not defined or (current_user_dir is match(organization_filter))
      loop: "{{ current_users | selectattr('organizations', 'defined') | map(attribute='organizations') | flatten | unique }}"
      loop_control:
        loop_var: current_user_dir
        label: "{{ __path }}"

    - name: "Add current users to the <ORGANIZATION_NAME>/<USERNAME>.yaml output file in {{ output_path }}"
      ansible.builtin.template:
        src: "templates/current_users.j2"
        dest: "{{ __dest }}"
        mode: '0644'
      vars:
        current_users_asset_value: "{{ current_user_dir.0 }}"
        __dest: "{{ output_path }}/{{ current_user_dir.1 | regex_replace('/', '_') }}/users/{{ current_user_dir.0.username | regex_replace('/', '_') }}.yaml"
      when: organization_filter is not defined or (current_user_dir.1 is match(organization_filter))
      loop: "{{ current_users | default([]) | subelements('organizations', skip_missing=true) }}"
      loop_control:
        loop_var: current_user_dir
        label: "{{ __dest }}"

- name: "Set the user's roles"
  ansible.builtin.include_tasks: "user_roles.yml"
  vars:
    username: "{{ current_user.0.username }}"
    last_user_role: "{{ current_user_index_for_roles == ((current_users | default([]) | subelements('organizations', skip_missing=true) | length) - 1) }}"
  when:
    - not current_user.0.is_superuser
    - organization_filter is not defined or (current_user.1 is match(organization_filter))
  loop: "{{ current_users | default([]) | subelements('organizations', skip_missing=true) }}"
  loop_control:
    index_var: current_user_index_for_roles
    loop_var: current_user
...
