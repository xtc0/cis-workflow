---
name: Test roles and modules with galaxy_ng

on:
  workflow_call:
    inputs:
      galaxy_ng_version:
        description: The version to pull of galaxy_ng
        required: true
        type: string
      gh_ref:
        description: The ref in the repository to pull
        required: false
        default: devel
        type: string
    secrets:
      redhat_catalog_username:
        description: Username for Red Hat Catalog
        required: true
      redhat_catalog_password:
        description: Password for Red Hat Catalog
        required: true

jobs:

  integration:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ inputs.gh_ref }}

      - name: "Checkout galaxy_ng"
        uses: actions/checkout@v2
        with:
          repository: ansible/galaxy_ng
          path: galaxy_ng
          ref: ${{ inputs.galaxy_ng_version }}

      - name: "Checkout ansible-hub-ui"
        uses: actions/checkout@v2
        with:
          repository: ansible/ansible-hub-ui
          path: ansible-hub-ui
          ref: ${{ inputs.galaxy_ng_version }}

      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Update apt
        run: sudo apt -y update

      - name: Install LDAP requirements
        run: sudo apt-get install -y libsasl2-dev python3-dev libldap2-dev libssl-dev build-essential

      - name: Install docker-compose
        run: pip3 install --upgrade docker-compose

      - name: collect system info
        run: whoami; id; pwd; ls -al; uname -a ; df -h .; mount ; cat /etc/issue; docker --version ; ps aux | fgrep -i docker; ls -al /var/run/containerd/containerd.sock

      - name: create the .compose.env file
        run: rm -f galaxy_ng/.compose.env; cp galaxy_ng/.compose.env.example galaxy_ng/.compose.env

      - name: workaround github worker permissions issues
        run: sed -i.bak 's/PIP_EDITABLE_INSTALL=1/PIP_EDITABLE_INSTALL=0/' galaxy_ng/.compose.env

      - name: workaround to enable collection approval for 4.4/4.5
        run: sed -i.bak 's/PULP_GALAXY_REQUIRE_CONTENT_APPROVAL=false/PULP_GALAXY_REQUIRE_CONTENT_APPROVAL=true/' galaxy_ng/dev/standalone/galaxy_ng.env

      - name: workaround github worker permissions issues
        run: sed -i.bak 's/WITH_DEV_INSTALL=1/WITH_DEV_INSTALL=0/' galaxy_ng/.compose.env

      - name: set the hub ui path in .compose.env
        run: echo "ANSIBLE_HUB_UI_PATH='/home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/ansible-hub-ui'" >> galaxy_ng/.compose.env

      - name: cat
        run: cat galaxy_ng/.compose.env

      - name: build stack
        working-directory: galaxy_ng
        run: make docker/build

      - name: run migrations
        working-directory: galaxy_ng
        run: make docker/migrate

      - name: load translations
        working-directory: galaxy_ng
        run: make docker/translations

      - name: load loaddata
        working-directory: galaxy_ng
        run: make docker/loaddata

      - name: start the compose stack
        working-directory: galaxy_ng
        run: ./compose up -d

      - name: give stack some time to spin up
        run: sleep 240

      - name: Move ansible.cfg to root
        run: mv .github/files/ansible.cfg .

      - name: Build and install the collection
        id: build
        uses: redhat-cop/ansible_collections_tooling/actions/build_ansible_collection@main
        with:
          collection_namespace: infra
          collection_name: ah_configuration
          collection_version: 1.0.0
          collection_repo: https://github.com/ansible/galaxy_collection

      - name: "Perform playbook collection tests"
        run: ansible-playbook tests/playbooks/testing_collections_playbook.yml -v -e galaxy_ng_version=${{ inputs.galaxy_ng_version }} -e git_repo_name=${{ github.event.repository.name }}
        if: |
          inputs.galaxy_ng_version == 'stable-4.4' ||
          inputs.galaxy_ng_version == 'stable-4.5' ||
          inputs.galaxy_ng_version == 'stable-4.6' ||
          inputs.galaxy_ng_version == 'stable-4.7'


      - name: "Perform collection repository tests"
        run: ansible-playbook tests/playbooks/testing_collections_repos.yml -v -e galaxy_ng_version=${{ inputs.galaxy_ng_version }}

      - name: "Perform playbook namespace tests"
        run: ansible-playbook tests/playbooks/testing_playbook_ee_namespace.yml -v -e galaxy_ng_version=${{ inputs.galaxy_ng_version }}
        if: ${{ inputs.galaxy_ng_version == 'stable-4.4' || inputs.galaxy_ng_version == 'stable-4.5'  }}  # ee_namespace APIs were removed in 4.6 (see #183)

      - name: "Perform playbook repository tests"
        run: ansible-playbook tests/playbooks/testing_playbook_ee_repository.yml -vv -e galaxy_ng_version=${{ inputs.galaxy_ng_version }} -e redhat_catalog_username=${{ secrets.redhat_catalog_username }} -e redhat_catalog_password=${{ secrets.redhat_catalog_password }}

      - name: "Perform playbook user and group management tests"
        run: ansible-playbook tests/playbooks/testing_playbook_user.yml -v -e galaxy_ng_version=${{ inputs.galaxy_ng_version }}
