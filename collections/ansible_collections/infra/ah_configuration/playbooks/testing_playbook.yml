---
- name: Testing Galaxy
  hosts: localhost
  connection: local
  gather_facts: false
  collections:
    - infra.ah_configuration
  pre_tasks:
    - name: Include vars from ah_configs directory
      ansible.builtin.include_vars:
        dir: ./ah_configs
        extensions: ["yml"]
      tags:
        - always

    - name: Create a directory if it does not exist
      ansible.builtin.file:
        path: "{{ ah_configuration_working_dir }}"
        state: directory
        mode: '0755'

  tasks:
    - name: Authenticate and get an API token
      infra.ah_configuration.ah_token:
        ah_host: "{{ ah_hostname }}"
        ah_username: "{{ ah_username }}"
        ah_password: "{{ ah_password }}"
        ah_path_prefix: "{{ ah_path_prefix }}"
        validate_certs: "{{ ah_validate_certs }}"

    - name: Create ansible config file
      ansible.builtin.include_role:
        name: ansible_config

    - name: Create namespace
      ansible.builtin.include_role:
        name: namespace

    #  - name: Publish Collections
    #    ansible.builtin.include_role:
    #      name: publish
    #    vars:
    #      ah_auto_approve: true

    - name: Remove collection
      infra.ah_configuration.ah_collection:
        namespace: community_test
        name: test
        version: 1.0.1
        state: absent
        ah_host: "{{ ah_hostname }}"
        ah_token: "{{ ah_token }}"
        ah_path_prefix: "{{ ah_path_prefix }}"
        validate_certs: "{{ ah_validate_certs }}"

    - name: Configure community repo
      infra.ah_configuration.ah_repository:
        name: community
        url: https://galaxy.ansible.com/api/
        requirements:
          - name: infra.ah_configuration
          - name: infra.controller_configuration
        ah_host: "{{ ah_hostname }}"
        ah_token: "{{ ah_token }}"
        ah_path_prefix: "{{ ah_path_prefix }}"
        validate_certs: "{{ ah_validate_certs }}"

    - name: Configure community repo from file
      infra.ah_configuration.ah_repository:
        name: community
        url: https://galaxy.ansible.com/api/
        requirements_file: files/collection_requirement_file.yml
        ah_host: "{{ ah_hostname }}"
        ah_token: "{{ ah_token }}"
        ah_path_prefix: "{{ ah_path_prefix }}"
        validate_certs: "{{ ah_validate_certs }}"

    - name: Sync community repo
      infra.ah_configuration.ah_repository_sync:
        name: community
        wait: true
        ah_host: "{{ ah_hostname }}"
        ah_token: "{{ ah_token }}"
        ah_path_prefix: "{{ ah_path_prefix }}"
        validate_certs: "{{ ah_validate_certs }}"

    - name: Configure rh-certified repo
      infra.ah_configuration.ah_repository:
        name: rh-certified
        url: https://cloud.redhat.com/api/automation-hub/
        auth_url: https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token
        token: aabbcc
        ah_host: "{{ ah_hostname }}"
        ah_token: "{{ ah_token }}"
        ah_path_prefix: "{{ ah_path_prefix }}"
        validate_certs: "{{ ah_validate_certs }}"

    - name: Add EE Registry
      infra.ah_configuration.ah_ee_registry:
        name: myreg
        url: https://registry.redhat.io
        ah_host: "{{ ah_hostname }}"
        ah_username: "{{ ah_username }}"
        ah_password: "{{ ah_password }}"
        ah_path_prefix: "{{ ah_path_prefix }}"
        validate_certs: "{{ ah_validate_certs }}"

    - name: Deauthenticate
      infra.ah_configuration.ah_token:
        ah_host: "{{ ah_hostname }}"
        ah_token: "{{ ah_token }}"
        ah_path_prefix: "{{ ah_path_prefix }}"
        validate_certs: "{{ ah_validate_certs }}"
        state: absent

...
