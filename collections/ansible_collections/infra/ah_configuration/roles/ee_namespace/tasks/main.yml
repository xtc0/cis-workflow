---

# Create AH EE Namespace
- name: Add Automation Hub Execution Environment Namespace
  ah_ee_namespace:
    name:             "{{ __ee_namespace_item.name }}"
    # new_name:         "{{ __ee_namespace_item.new_name | default(omit) }}"  <-- Needs adding once new_name option added to module
    append:           "{{ __ee_namespace_item.append | default(omit) }}"
    groups:           "{{ __ee_namespace_item.groups | default([]) }}"
    state:            "{{ __ee_namespace_item.state | default(ah_state | default('present')) }}"
    ah_host:          "{{ ah_host | default(ah_hostname) | default(omit) }}"
    ah_username:      "{{ ah_username | default(omit) }}"
    ah_password:      "{{ ah_password | default(omit) }}"
    ah_path_prefix:   "{{ ah_path_prefix | default(omit) }}"
    validate_certs:   "{{ ah_validate_certs | default(omit) }}"
    request_timeout:  "{{ ah_request_timeout | default(omit) }}"
  loop: "{{ ah_ee_namespaces }}"
  loop_control:
    loop_var: "__ee_namespace_item"
  no_log: "{{ ah_configuration_ee_namespace_secure_logging }}"
  async: 1000
  poll: 0
  register: __ee_namespaces_job_async
  changed_when: not __ee_namespaces_job_async.changed
  vars:
    ansible_async_dir: '{{ ah_configuration_async_dir }}'

- name: "Create EE Namespace | Wait for finish the ee_namespace creation"
  ansible.builtin.async_status:
    jid: "{{ __ee_namespaces_job_async_result_item.ansible_job_id }}"
  register: __ee_namespaces_job_async_result
  until: __ee_namespaces_job_async_result.finished
  retries: "{{ ah_configuration_ee_namespace_async_retries }}"
  delay: "{{ ah_configuration_ee_namespace_async_delay }}"
  loop: "{{ __ee_namespaces_job_async.results }}"
  loop_control:
    loop_var: __ee_namespaces_job_async_result_item
  when: __ee_namespaces_job_async_result_item.ansible_job_id is defined
  no_log: "{{ ah_configuration_ee_namespace_secure_logging }}"
  vars:
    ansible_async_dir: '{{ ah_configuration_async_dir }}'
...
