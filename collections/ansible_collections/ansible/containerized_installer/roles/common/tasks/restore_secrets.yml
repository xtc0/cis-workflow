- name: Handling backup secrets
  block:
    - name: Create temporary build directory
      ansible.builtin.tempfile:
        state: directory
        prefix: restore.ansible.
      register: temp_secret

    - name: Unarchive secret data
      ansible.builtin.unarchive:
        src: "{{ backup_file }}"
        dest: "{{ temp_secret.path }}"
        include:
          - .local/

    - name: Locate secrets file
      ansible.builtin.find:
        paths: "{{ temp_secret.path }}"
        recurse: true
        patterns:
          - "secrets.json"
      register: __secret_id_file

    - name: Locate data file
      ansible.builtin.find:
        paths: "{{ temp_secret.path }}"
        recurse: true
        patterns:
          - "secretsdata.json"
      register: __secret_data_file

    - name: Gather NametoID contents
      ansible.builtin.slurp:
        src: "{{ __secret_id_file.files[0].path }}"
      register: __secret_id_content
      no_log: true

    - name: Gather IdtoValue contents
      ansible.builtin.slurp:
        src: "{{ __secret_data_file.files[0].path }}"
      register: __secret_data_content
      no_log: true

    - name: Set name to id facts
      ansible.builtin.set_fact:
        __secret_ids_json_data: "{{ __secret_id_content['content'] | b64decode | from_json }}"
      no_log: true

    - name: Read the JSON file
      ansible.builtin.set_fact:
        __secret_values_json_data: "{{ __secret_data_content['content'] | b64decode | from_json }}"
      no_log: true

    - name: Setting host facts using complex arguments
      ansible.builtin.set_fact:
        __old_{{ item.key }}: "{{ __secret_values_json_data[item.value] }}"
      loop: "{{ __secret_ids_json_data.nameToID | dict2items }}"
      no_log: true
  always:
    - name: Remove temporary directory
      ansible.builtin.file:
        path: "{{ temp_secret.path }}"
        state: absent
      when: temp_secret.path is defined
