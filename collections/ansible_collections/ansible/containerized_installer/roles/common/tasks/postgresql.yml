---
- name: Include registry tasks
  ansible.builtin.include_tasks: registry.yml
  when:
    - not bundle_install | bool
    - registry_auth | bool

- name: Set the container image facts
  ansible.builtin.include_tasks: images.yml

- name: Offline postgresql container image workflow
  when: bundle_install | bool
  vars:
    image: '{{ (_postgresql_image | basename).split(":")[0] }}'
  block:
    - name: Create temporary directory for container tarball
      ansible.builtin.tempfile:
        path: '{{ images_tmp_dir | default(omit) }}'
        state: directory
        suffix: images
      register: images_tmp

    - name: Copy the postgresql container image tarball
      ansible.builtin.copy:
        src: '{{ bundle_dir }}/images/{{ image }}.tar.gz'
        dest: '{{ images_tmp.path }}/{{ image }}.tar.gz'
        mode: '0644'

    - name: Uncompress postgresql container image
      ansible.builtin.command: '{{ container_compress }} -d {{ images_tmp.path }}/{{ image }}.tar.gz'
      args:
        creates: '{{ images_tmp.path }}/{{ image }}.tar'

    - name: Load the postgresql container image
      containers.podman.podman_load:
        path: '{{ images_tmp.path }}/{{ image }}.tar'
  always:
    - name: Remove temporary directory
      ansible.builtin.file:
        path: "{{ images_tmp.path }}"
        state: absent
      when: images_tmp.path is defined

- name: Online postgresql container image workflow
  containers.podman.podman_image:
    name: '{{ _postgresql_image }}'
    pull: true
    force: '{{ container_pull_images | bool }}'
    validate_certs: '{{ registry_tls_verify }}'
  environment:
    HTTP_PROXY: "{{ http_proxy | default('') }}"
    HTTPS_PROXY: "{{ https_proxy | default('') }}"
    NO_PROXY: "{{ no_proxy | default('') }}"
  when: not bundle_install | bool

- name: Ensure .local/bin directory exists
  ansible.builtin.file:
    path: '{{ ansible_user_dir }}/.local/bin'
    state: directory
    mode: '0770'
...
