---
- name: Ensure automation eda is ready
  ansible.builtin.uri:
    url: '{{ _eda_url }}/api/eda/v1/status/'
    validate_certs: true
    ca_path: '{{ _ca_tls_dir }}/extracted/pem/tls-ca-bundle.pem'
    return_content: true
  register: _eda_ready
  until:
    - _eda_ready.content != ""
    - (_eda_ready.content | from_json).status == 'OK'
  retries: 5
  delay: 60

- name: Create automation eda registry credentials
  ansible.containerized_installer.eda_credential:
    eda_server_url: '{{ _eda_url }}'
    eda_username: '{{ eda_admin_user }}'
    eda_password: '{{ eda_admin_password }}'
    eda_validate_certs: true
    name: '{{ eda_registry_credential }}'
    username: '{{ registry_username }}'
    token: '{{ registry_password }}'
    registry_url: "{{ _registry_url }}"
  environment:
    SSL_CERT_FILE: '{{ _ca_tls_dir }}/extracted/pem/tls-ca-bundle.pem'
  when: _eda_creds | bool

- name: Create automation eda decision environments
  ansible.containerized_installer.eda_decision_environment:
    eda_server_url: '{{ _eda_url }}'
    eda_username: '{{ eda_admin_user }}'
    eda_password: '{{ eda_admin_password }}'
    validate_certs: true
    name: '{{ item.name }}'
    image: '{{ item.image }}'
    credential_name: '{{ (_eda_creds | bool) | ternary(eda_registry_credential, omit) }}'
  environment:
    SSL_CERT_FILE: '{{ _ca_tls_dir }}/extracted/pem/tls-ca-bundle.pem'
  loop: '{{ _default_de | union(_de_extra_images | default([])) }}'

- name: Create eda resources for Automation Hub
  when: groups.get('automationhub', []) | length > 0
  vars:
    __dest: '{{ (__dest_port | int == 443) | ternary(__dest_host, __dest_host + ":" + __dest_port) }}'
    __dest_url: '{{ hostvars[groups["automationgateway"][0]]["_gateway_proxy_url"] }}'
    __dest_host: '{{ __dest_url | urlsplit("hostname") }}'
    __dest_port: '{{ __dest_url | urlsplit("port") | ternary(__dest_url | urlsplit("port"), 443) }}'
  block:
    - name: Create automation eda registry credentials for hub
      ansible.containerized_installer.eda_credential:
        eda_server_url: '{{ _eda_url }}'
        eda_username: '{{ eda_admin_user }}'
        eda_password: '{{ eda_admin_password }}'
        eda_validate_certs: true
        name: 'Hub {{ eda_registry_credential }}'
        username: '{{ gateway_admin_user | default("admin") }}'
        token: '{{ gateway_admin_password }}'
        registry_url: '{{ __dest }}'
      environment:
        SSL_CERT_FILE: '{{ _ca_tls_dir }}/extracted/pem/tls-ca-bundle.pem'

    - name: Create automation eda decision environments for hub
      ansible.containerized_installer.eda_decision_environment:
        eda_server_url: '{{ _eda_url }}'
        eda_username: '{{ eda_admin_user }}'
        eda_password: '{{ eda_admin_password }}'
        validate_certs: true
        name: 'Hub {{ item.name }}'
        image: '{{ __dest }}/{{ item.image | basename }}'
        credential_name: 'Hub {{ eda_registry_credential }}'
      environment:
        SSL_CERT_FILE: '{{ _ca_tls_dir }}/extracted/pem/tls-ca-bundle.pem'
      loop: '{{ _default_de | union(_de_extra_images | default([])) }}'
...
