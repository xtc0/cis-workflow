---
- name: Initialize the automation eda database
  containers.podman.podman_container:
    name: automation-eda-init
    image: '{{ _eda_image }}'
    command: 'aap-eda-manage migrate --noinput'
    detach: false
    rm: true
    log_driver: '{{ container_log_driver }}'
    user: '{{ ansible_user_uid }}'
    userns: keep-id
    network: host
    secrets: '{{ _common_secrets }}'
    volume: '{{ _api_volumes }}'
    env: '{{ _common_env }}'
  register: _migrate
  changed_when: "'No migrations to apply' not in _migrate.stdout"
  run_once: true
  retries: 5
  delay: 60
  until: _migrate is not failed

- name: Create the initial automation eda data
  containers.podman.podman_container:
    name: automation-eda-init
    image: '{{ _eda_image }}'
    command: 'aap-eda-manage create_initial_data'
    detach: false
    rm: true
    log_driver: '{{ container_log_driver }}'
    user: '{{ ansible_user_uid }}'
    userns: keep-id
    network: host
    secrets: '{{ _common_secrets }}'
    volume: '{{ _api_volumes }}'
    env: '{{ _common_env | combine({"ANSIBLE_REVERSE_RESOURCE_SYNC": False}) }}'
  register: _initial_data
  changed_when: "'Nothing to do' not in _initial_data.stdout"
  run_once: true
  retries: 5
  delay: 60
  until: _initial_data is not failed

- name: Create django super user
  containers.podman.podman_container:
    name: automation-eda-init
    image: '{{ _eda_image }}'
    command: 'aap-eda-manage createsuperuser --username={{ eda_admin_user }} --email={{ eda_admin_email }} --noinput'
    detach: false
    rm: true
    log_driver: '{{ container_log_driver }}'
    user: '{{ ansible_user_uid }}'
    userns: keep-id
    network: host
    secrets: '{{ _django_secrets }}'
    volume: '{{ _api_volumes }}'
    env: '{{ _common_env | combine({"ANSIBLE_REVERSE_RESOURCE_SYNC": False}) }}'
  register: _createsuperuser
  changed_when: "'Superuser created successfully' in _createsuperuser.stdout"
  failed_when:
    - "'That username is already taken' not in _createsuperuser.stderr"
    - "'Superuser created successfully' not in _createsuperuser.stdout"
  run_once: true
  retries: 5
  delay: 60
  until: _createsuperuser is not failed

- name: Update django super user password
  containers.podman.podman_container:
    name: automation-eda-init
    image: '{{ _eda_image }}'
    command: 'aap-eda-manage update_password --username={{ eda_admin_user }} --password={{ eda_admin_password }}'
    detach: false
    rm: true
    log_driver: '{{ container_log_driver }}'
    user: '{{ ansible_user_uid }}'
    userns: keep-id
    network: host
    secrets: '{{ _django_secrets }}'
    volume: '{{ _api_volumes }}'
    env: '{{ _common_env }}'
  register: _updatesuperuser
  changed_when: "'Successfully updated the password' in _updatesuperuser.stdout"
  failed_when:
    - _updatesuperuser is failed
    - not "'User matching query does not exist' in _updatesuperuser.stderr"
  no_log: true
  run_once: true
  retries: 5
  delay: 60
  until: _updatesuperuser is not failed
...
