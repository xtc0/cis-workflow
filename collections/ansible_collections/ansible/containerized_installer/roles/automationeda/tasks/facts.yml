---
- name: Set eda hostname, port(s) and protocol
  ansible.builtin.set_fact:
    _eda_hostname: '{{ routable_hostname | default(ansible_host) }}'
    _eda_port: '{{ (eda_nginx_disable_https | bool) | ternary(eda_nginx_http_port, eda_nginx_https_port) }}'
    _eda_ports: ['{{ eda_nginx_http_port }}']
    _eda_protocol: '{{ (eda_nginx_disable_https | bool) | ternary("http", "https") }}'
    _eda_ws_protocol: '{{ (eda_nginx_disable_https | bool) | ternary("ws", "wss") }}'

- name: Set eda redis hostname
  ansible.builtin.set_fact:
    _eda_redis_hostname: '{{ eda_redis_host | default(_eda_hostname) }}'
  when: groups['automationeda'] | length > 1

- name: Add https port to eda port list
  ansible.builtin.set_fact:
    _eda_ports: '{{ _eda_ports | union([eda_nginx_https_port]) }}'
  when: not eda_nginx_disable_https | bool

- name: Set eda URL
  ansible.builtin.set_fact:
    _eda_url: '{{ _eda_protocol }}://{{ _eda_hostname }}:{{ _eda_port }}'

- name: Set eda IPs
  ansible.builtin.set_fact:
    _eda_ips: '{{ _eda_ips | default([]) | union(["IP:" + item]) }}'
  loop: '{{ ansible_all_ipv4_addresses + ansible_all_ipv6_addresses }}'

- name: Set decision environment facts
  ansible.builtin.set_fact:
    _default_de:
      - name: 'Default Decision Environment'
        image: '{{ _de_supported_image }}'
    _eda_creds: '{{ ((not bundle_install | default(false) | bool) and (registry_auth | default(true)) | bool) }}'

- name: Remove redis container dependency when using multiple nodes
  ansible.builtin.set_fact:
    eda_container_requires: []
  when: groups['automationeda'] | length > 1

- name: Add postgresql container to requires when on the same node
  ansible.builtin.set_fact:
    eda_container_requires: '{{ eda_container_requires | union(["postgresql"]) }}'
  when: inventory_hostname in groups.get('database', [])

- name: Set automation eda env and volume facts
  ansible.builtin.set_fact:
    _common_env:
      EDA_SETTINGS_FILE: /etc/eda.yaml
    _common_secrets:
      - 'eda_secret_key,target=/etc/eda/SECRET_KEY,mode=0400,uid={{ ansible_user_uid }}'
      - 'eda_resource_server,type=env,target=EDA_RESOURCE_SERVER__SECRET_KEY'
    _common_volumes:
      - '{{ _ca_tls_dir }}/extracted:/etc/pki/ca-trust/extracted:z'
      - '{{ eda_conf_dir }}/settings.yaml:/etc/eda.yaml:ro,z'
      - 'eda_data:/var/lib/ansible-automation-platform/eda:U'
    _django_secrets:
      - 'eda_admin_password,type=env,target=DJANGO_SUPERUSER_PASSWORD'
    _nginx_volumes:
      - '{{ eda_nginx_conf_dir }}/eda.conf:/etc/nginx/nginx.conf:ro,z'
      - '{{ eda_nginx_conf_dir }}/redirect-page.html:/var/lib/ansible-automation-platform/eda/index.html:ro,z'
      - 'eda_nginx:/var/lib/nginx:U'
    _podman_volumes:
      - '{{ ansible_user_dir }}/aap/containers/podman:/usr/bin/podman:ro,z'
      - '/run/user/{{ ansible_user_uid }}/podman/podman.sock:/run/user/{{ ansible_user_uid }}/podman/podman.sock:z'
    _worker_env:
      CONTAINER_HOST: 'unix:///run/user/{{ ansible_user_uid }}/podman/podman.sock'

- name: Add postgresql password secret to secrets
  ansible.builtin.set_fact:
    _common_secrets: '{{ _common_secrets + _postgresql_db_secret }}'
  vars:
    _postgresql_db_secret:
      - 'eda_db_password,type=env,target=EDA_DB_PASSWORD'
  when: not eda_pg_cert_auth | bool

- name: Add postgresql tls to common automation eda volumes
  ansible.builtin.set_fact:
    _common_volumes: '{{ _common_volumes + _postgresql_tls_volumes }}'
  vars:
    _postgresql_tls_volumes:
      - '{{ eda_conf_dir }}/postgresql.cert:/etc/eda/postgresql.cert:ro,z'
      - '{{ eda_conf_dir }}/postgresql.key:/etc/eda/postgresql.key:ro,z'
  when: eda_pg_cert_auth | bool

- name: Add postgresql socket directory to common automation eda volumes
  ansible.builtin.set_fact:
    _common_volumes: '{{ _common_volumes + _postgresql_volumes }}'
  vars:
    _postgresql_volumes:
      - '{{ eda_pg_socket }}:{{ eda_pg_socket }}:z'
  when: eda_pg_socket is defined

- name: Add redis password to secrets
  ansible.builtin.set_fact:
    _common_secrets: '{{ _common_secrets + _redis_password_secret }}'
  vars:
    _redis_password_secret:
      - 'eda_redis_password,type=env,target=EDA_MQ_USER_PASSWORD'
  when: groups['automationeda'] | length > 1

- name: Set scheduler/web/worker automation eda env/volumes/secrets
  ansible.builtin.set_fact:
    _api_volumes: '{{ _common_volumes }}'
    _django_secrets: '{{ _common_secrets + _django_secrets }}'
    _scheduler_volumes: '{{ _common_volumes }}'
    _web_volumes: '{{ _nginx_volumes }}'
    _worker_env: '{{ _common_env | combine(_worker_env) }}'
    _worker_volumes: '{{ _common_volumes + _podman_volumes }}'

- name: Add tls to web automation eda volumes
  ansible.builtin.set_fact:
    _web_volumes: '{{ _web_volumes + _tls_volumes }}'
  vars:
    _tls_volumes:
      - '{{ eda_conf_dir }}/eda.cert:/etc/eda/eda.cert:ro,z'
      - '{{ eda_conf_dir }}/eda.key:/etc/eda/eda.key:ro,z'
  when: not eda_nginx_disable_https | bool

- name: Use local redis instance with single node
  ansible.builtin.set_fact:
    _api_volumes: '{{ _api_volumes + _redis_volumes }}'
    _scheduler_volumes: '{{ _scheduler_volumes + _redis_volumes }}'
    _worker_volumes: '{{ _worker_volumes + _redis_volumes }}'
  vars:
    _redis_volumes:
      - 'redis_run:/run/redis:z'
  when: groups['automationeda'] | length == 1

- name: Add redis tls to api/scheduler/workers automation eda volumes
  ansible.builtin.set_fact:
    _api_volumes: '{{ _api_volumes + _redis_tls_volumes }}'
    _scheduler_volumes: '{{ _scheduler_volumes + _redis_tls_volumes }}'
    _worker_volumes: '{{ _worker_volumes + _redis_tls_volumes }}'
  vars:
    _redis_tls_volumes:
      - '{{ eda_conf_dir }}/redis.cert:/etc/eda/redis.cert:ro,z'
      - '{{ eda_conf_dir }}/redis.key:/etc/eda/redis.key:ro,z'
  when:
    - groups['automationeda'] | length > 1
    - not eda_redis_disable_tls | bool

- name: Set redis cluster hostnames
  ansible.builtin.set_fact:
    _redis_cluster_hostnames: '{{ _redis_hostnames | product([eda_redis_port | string]) | map("join", ":") | join(",") }}'
  vars:
    _redis_hostnames: '{{ groups["redis"] | map("extract", hostvars) | map(attribute="_redis_hostname") }}'
  run_once: true
  when: redis_mode | default('cluster') == 'cluster'

- name: Set eda rulebook queue name
  ansible.builtin.set_fact:
    _eda_queue_name: 'eda-{{ ansible_hostname[:200] }}-{{ ansible_product_uuid | lower }}'
  when: eda_type in ['hybrid', 'worker']

- name: Set systemd requires
  ansible.builtin.set_fact:
    __systemd_requires: '{{ eda_container_requires | sort | product([".service"]) | map("join") | list }}'
...
