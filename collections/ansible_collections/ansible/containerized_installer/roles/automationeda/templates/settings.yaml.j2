---
ACTIVATION_DB_HOST: '{{ eda_pg_host }}'
ALLOWED_HOSTS: ["*"]
DB_HOST: '{{ eda_pg_host }}'
DB_NAME: '{{ eda_pg_database }}'
DB_PORT: '{{ eda_pg_port }}'
DB_USER: '{{ eda_pg_username }}'
DEBUG: {{ eda_debug | bool }}
DEPLOYMENT_TYPE: podman
STATIC_ROOT: /var/lib/ansible-automation-platform/eda/static
STATIC_URL: /api/eda/static/
MAX_RUNNING_ACTIVATIONS: '{{ eda_max_running_activations }}'
{% if groups['automationeda'] | length > 1 %}
{% if redis_mode | default('cluster') == 'cluster' %}
MQ_REDIS_HA_CLUSTER_HOSTS: '{{ _redis_cluster_hostnames }}'
{% else %}
MQ_HOST: '{{ hostvars[groups["automationgateway"][0]]["_gateway_redis_hostname"] }}'
MQ_PORT: '{{ eda_redis_port }}'
MQ_DB: '{{ eda_redis_queue_db }}'
{% endif %}
MQ_USER: '{{ eda_redis_username }}'
{% if not eda_redis_disable_tls | bool %}
MQ_CLIENT_CACERT_PATH: '{{ ca_trust_bundle }}'
MQ_CLIENT_CERT_PATH: '/etc/eda/redis.cert'
MQ_CLIENT_KEY_PATH: '/etc/eda/redis.key'
{% endif %}
{% else %}
MQ_UNIX_SOCKET_PATH: /run/redis/redis.sock
MQ_DB: '{{ eda_redis_queue_db }}'
{% endif %}
PGSSLMODE: '{{ eda_pg_sslmode }}'
PGSSLROOTCERT: '{{ ca_trust_bundle }}'
{% if eda_pg_cert_auth | bool %}
PGSSLCERT: '/etc/eda/postgresql.cert'
PGSSLKEY: '/etc/eda/postgresql.key'
{% endif %}
PODMAN_EXTRA_ARGS: '@json {"security_opt": ["disable"], "network_mode": "host"}'
PODMAN_MOUNTS: '@json {{ eda_podman_mounts | to_json }}'
PODMAN_SOCKET_URL: 'unix:///run/user/{{ ansible_user_uid }}/podman/podman.sock'
{% if eda_type in ['hybrid', 'worker'] %}
RULEBOOK_QUEUE_NAME: '{{ _eda_queue_name }}'
{% endif %}
RULEBOOK_WORKER_QUEUES: '{{ groups["automationeda"] | map("extract", hostvars) | selectattr("_eda_queue_name", "defined") | map(attribute="_eda_queue_name") | join(",") }}'
{% if eda_safe_plugins | length > 0 %}
SAFE_PLUGINS_FOR_PORT_FORWARD: {{ eda_safe_plugins }}
{% endif %}
SECRET_KEY_FILE: /etc/eda/SECRET_KEY
WEBSOCKET_BASE_URL: '{{ _eda_ws_protocol }}://{{ _eda_hostname }}:{{ _eda_port }}'
WEBSOCKET_SSL_VERIFY: 'yes'
ALLOW_LOCAL_RESOURCE_MANAGEMENT: False
ANSIBLE_BASE_JWT_VALIDATE_CERT: True
ANSIBLE_BASE_JWT_REDIRECT_TYPE: eda
ANSIBLE_BASE_JWT_KEY: '{{ hostvars[groups["automationgateway"][0]]["_gateway_proxy_url"] }}'
ANSIBLE_BASE_MANAGED_ROLE_REGISTRY: '@json {"platform_auditor": {"name": "Platform Auditor", "shortname": "sys_auditor"}}'
RESOURCE_SERVER__URL: '{{ hostvars[groups["automationgateway"][0]]["_gateway_proxy_url"] }}'
RESOURCE_SERVER__VALIDATE_HTTPS: True
EVENT_STREAM_BASE_URL: '{{ eda_event_stream_url | default(hostvars[groups["automationgateway"][0]]["_gateway_proxy_url"]) }}/{{ eda_event_stream_prefix_path.strip("/") }}'
EVENT_STREAM_MTLS_BASE_URL: '@none None'

{% for item in eda_extra_settings %}
{% if item.value is string %}
{{ item.setting }}: '{{ item.value }}'
{% else %}
{{ item.setting }}: {{ item.value }}
{% endif %}
{% endfor %}

{% if feature_flags is defined %}
{% for flag_name, flag_value in feature_flags.items() %}
{{ flag_name | upper }}: {{ flag_value | bool }}
{% endfor %}
{% endif %}
...
