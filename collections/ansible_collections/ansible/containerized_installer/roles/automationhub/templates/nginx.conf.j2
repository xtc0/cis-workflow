#jinja2: lstrip_blocks: True

# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

worker_processes  auto;

pid        /run/nginx/nginx.pid;
error_log  /dev/stdout error;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    server_tokens off;

    log_format  main  '"$time_local" client=$remote_addr '
                      'method=$request_method request="$request" '
                      'request_length=$request_length '
                      'status=$status bytes_sent=$bytes_sent '
                      'body_bytes_sent=$body_bytes_sent '
                      'referer=$http_referer '
                      'user_agent="$http_user_agent" '
                      'upstream_addr=$upstream_addr '
                      'upstream_status=$upstream_status '
                      'request_time=$request_time '
                      'upstream_response_time=$upstream_response_time '
                      'upstream_connect_time=$upstream_connect_time '
                      'upstream_header_time=$upstream_header_time '
                      'request_id="$http_x_request_id"';

    access_log  /dev/stdout  main;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    types_hash_max_size 4096;

    upstream pulp-api {
        server 127.0.0.1:{{ hub_api_port }};
    }

    upstream pulp-content {
        server 127.0.0.1:{{ hub_content_port }};
    }

    server {
        {% if not hub_nginx_disable_https | bool %}
        listen {{ hub_nginx_https_port }} default_server ssl http2;
        {% if ansible_all_ipv6_addresses | length > 0 %}
        listen [::]:{{ hub_nginx_https_port }} default_server ssl http2;
        {% endif %}
        {% else %}
        listen {{ hub_nginx_http_port }} default_server;
        {% if ansible_all_ipv6_addresses | length > 0 %}
        listen [::]:{{ hub_nginx_http_port }} default_server;
        {% endif %}
        {% endif %}

        # If you have a domain name, this is where to add it
        server_name _;
        keepalive_timeout 65;

        # The default client_max_body_size is 1m. Clients uploading
        # files larger than this will need to chunk said files.
        client_max_body_size {{ hub_nginx_client_max_body_size }};

        {% if not hub_nginx_disable_https | bool %}
        ssl_certificate /etc/pulp/pulp.cert;
        ssl_certificate_key /etc/pulp/pulp.key;
        ssl_session_cache shared:SSL:50m;
        ssl_session_timeout 1d;
        ssl_session_tickets off;

        ssl_protocols {{ hub_nginx_https_protocols | join(' ') }};
        # RHEL system crypto policy
        ssl_ciphers PROFILE=SYSTEM;
        ssl_prefer_server_ciphers on;
        {% endif %}

        {% if not hub_nginx_disable_hsts | bool %}
        # HSTS (ngx_http_headers_module is required, max-age in seconds)
        add_header Strict-Transport-Security max-age={{ hub_nginx_hsts_max_age }};
        {% endif %}

        # headers added with hub_nginx_user_headers variable
{% for header in hub_nginx_user_headers %}
        add_header {{ header }};
{% endfor %}

        # Protect against click-jacking https://www.owasp.org/index.php/Testing_for_Clickjacking_(OTG-CLIENT-009)
        add_header X-Frame-Options "DENY";
        # Protect against MIME content sniffing https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options
        add_header X-Content-Type-Options nosniff;

        gzip on;
        gzip_comp_level 6;
        gzip_proxied any;
        gzip_types text/css text/javascript text/plain text/xml application/javascript application/json application/xml;
        gzip_vary on;

        location /pulp/content/ {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass http://pulp-content;
        }

        location /pulp/api/v3/ {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass http://pulp-api;
        }

        location /auth/login/ {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass http://pulp-api;
        }

        location / {
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Host $http_host;
            # we don't want nginx trying to do something clever with
            # redirects, we set the Host: header above already.
            proxy_redirect off;
            proxy_pass http://pulp-api;
            # static files are served through whitenoise - http://whitenoise.evans.io/en/stable/
        }

        include /opt/app-root/etc/nginx.default.d/*.conf;
    }

    {% if not hub_nginx_disable_https | bool %}
    server {
        listen {{ hub_nginx_http_port }} default_server;
        {% if ansible_all_ipv6_addresses | length > 0 %}
        listen [::]:{{ hub_nginx_http_port }} default_server;
        {% endif %}
        server_name _;
        {% if hub_nginx_http_port | int == 443 %}
        return 301 https://$host$request_uri;
        {% else %}
        return 301 https://$host:{{ hub_nginx_https_port }}$request_uri;
        {% endif %}
    }
    {% endif %}
}
