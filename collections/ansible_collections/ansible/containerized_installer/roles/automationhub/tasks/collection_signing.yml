---
- name: Copy the collection signing GPG key
  ansible.builtin.copy:
    src: '{{ hub_collection_signing_key }}'
    dest: '{{ hub_conf_dir }}/keys/collection_signing.gpg'
    mode: '0400'

- name: Import the collection signing GPG key
  containers.podman.podman_container:
    name: automation-hub-gpg-import
    image: '{{ _hub_image }}'
    command: 'gpg --batch --import /etc/pulp/keys/collection_signing.gpg'
    detach: false
    rm: true
    log_driver: '{{ container_log_driver }}'
    user: '{{ ansible_user_uid }}'
    userns: keep-id
    network: host
    volume: '{{ _common_volumes + _gpg_volume }}'
    workdir: /var/lib/pulp
    env:
      HOME: /var/lib/pulp
  retries: 30
  delay: 10
  vars:
    _gpg_volume:
      - '{{ hub_conf_dir }}/keys/collection_signing.gpg:/etc/pulp/keys/collection_signing.gpg:ro,z'
  run_once: '{{ _hub_nfs }}'
  register: _import
  changed_when: "'not changed' not in _import.stderr"
  until: _import is not failed

- name: Set the collection signing GPG fingerprint fact
  ansible.builtin.set_fact:
    _hub_collection_signing_fingerprint: '{{ lookup("community.crypto.gpg_fingerprint", hub_collection_signing_key) }}'

- name: Trust the collection signing GPG key
  containers.podman.podman_container:
    name: automation-hub-gpg-trust
    image: '{{ _hub_image }}'
    entrypoint: /bin/sh
    command:
      - -c
      - |
        echo "{{ _hub_collection_signing_fingerprint }}:6:" | gpg --import-ownertrust
    detach: false
    rm: true
    log_driver: '{{ container_log_driver }}'
    interactive: true
    user: '{{ ansible_user_uid }}'
    userns: keep-id
    network: host
    volume: '{{ _common_volumes }}'
    workdir: /var/lib/pulp
    env:
      HOME: /var/lib/pulp
  run_once: '{{ _hub_nfs }}'
  register: _trust
  changed_when: "'inserting ownertrust' in _trust.stderr"

- name: Create the collection signing script
  ansible.builtin.template:
    src: collection_sign.sh.j2
    dest: '{{ aap_volumes_dir }}/hub/collection_sign.sh'
    mode: '0755'
...
