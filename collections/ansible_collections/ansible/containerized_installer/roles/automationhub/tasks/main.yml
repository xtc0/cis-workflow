---
- name: Get pulpcore version
  ansible.builtin.include_tasks: version.yml

- name: Set automation hub facts
  ansible.builtin.include_tasks: facts.yml

- name: Create podman volumes
  ansible.builtin.include_tasks: volumes.yml
  vars:
    __volume_state: present

- name: Create the hub directory
  ansible.builtin.file:
    path: '{{ hub_conf_dir }}/keys'
    mode: '0770'
    state: directory

- name: Handle NFS Data directory
  ansible.builtin.include_tasks: nfs.yml
  when: _hub_nfs | bool

- name: Configure postgresql
  ansible.builtin.include_tasks: postgresql.yml
  args:
    apply:
      run_once: true
  when: groups.get('database', []) | length == 1 or postgresql_admin_password is defined

- name: Install python-cryptography
  ansible.builtin.package:
    name: python3-cryptography
  become: true
  when: not ostree | bool

- name: Configure TLS
  ansible.builtin.include_tasks: tls.yml
  when: not hub_nginx_disable_https | bool

- name: Configure TLS for postgresql
  ansible.builtin.include_tasks: tls_postgresql.yml
  when: hub_pg_cert_auth | bool

- name: Configure nginx
  ansible.builtin.include_tasks: nginx.yml

- name: Configure podman secrets
  ansible.builtin.include_tasks: secrets.yml

- name: Configure collection signing
  ansible.builtin.include_tasks: collection_signing.yml
  when: hub_collection_signing | bool

- name: Configure container signing
  ansible.builtin.include_tasks: container_signing.yml
  when: hub_container_signing | bool

- name: Generate the container authentication private key
  community.crypto.openssl_privatekey:
    path: '{{ hub_conf_dir }}/keys/container_auth_private_key.pem'
    type: ECC
    curve: secp256r1
    mode: '0600'
    return_content: true
  run_once: true
  no_log: true
  register: _container_auth_private_key

- name: Generate the container authentication public key
  community.crypto.openssl_publickey:
    path: '{{ hub_conf_dir }}/keys/container_auth_public_key.pem'
    privatekey_path: '{{ hub_conf_dir }}/keys/container_auth_private_key.pem'
    mode: '0644'
    return_content: true
  run_once: true
  no_log: true
  register: _container_auth_public_key

- name: Copy the container authentication private key to all nodes
  ansible.builtin.copy:
    content: '{{ _container_auth_private_key.privatekey }}'
    dest: '{{ hub_conf_dir }}/keys/container_auth_private_key.pem'
    mode: '0600'

- name: Copy the the container authentication public key to all nodes
  ansible.builtin.copy:
    content: '{{ _container_auth_public_key.publickey }}'
    dest: '{{ hub_conf_dir }}/keys/container_auth_public_key.pem'
    mode: '0644'

- name: Generate galaxy importer configuration
  ansible.builtin.template:
    src: galaxy-importer.cfg.j2
    dest: '{{ hub_conf_dir }}/galaxy-importer.cfg'
    mode: '0644'
  notify: Restart hub workers
  when: hub_galaxy_importer is defined

- name: Handle container image update
  ansible.builtin.include_tasks: update.yml

- name: Configure containers
  ansible.builtin.include_tasks: containers.yml
  vars:
    __containers_recreate: '{{ __hub_recreate }}'

- name: Initialize data
  ansible.builtin.include_tasks: init.yml

- name: Ensure automation hub containers are enabled and started
  ansible.builtin.include_tasks: systemd.yml
  vars:
    __systemd_enabled: true
    __systemd_state: started

- name: Add firewalld rules
  ansible.builtin.include_tasks: firewalld.yml
  vars:
    __firewalld_state: enabled
...
