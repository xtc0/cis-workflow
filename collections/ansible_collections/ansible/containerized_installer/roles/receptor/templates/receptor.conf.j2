---
- node:
    id: {{ _receptor_hostname }}
    datadir: /var/lib/receptor
{% if receptor_type in ['control', 'hybrid'] %}
    firewallrules:
      - action: reject
        tonode: {{ _receptor_hostname }}
        toservice: control
{% endif %}

- log-level: {{ receptor_log_level }}

- control-service:
    service: control
    filename: /run/receptor/receptor.sock
    permissions: 0660
{% if not receptor_disable_tls | bool %}
    tls: tls_server
{% endif %}

{% if not receptor_disable_tls | bool %}
- tls-server:
    name: tls_server
    cert: /etc/receptor/tls/receptor.crt
    key: /etc/receptor/tls/receptor.key
    clientcas: /etc/receptor/tls/ca/mesh-CA.crt
    requireclientcert: true
    mintls13: {{ receptor_mintls13 | bool }}

- tls-client:
    name: tls_client
    cert: /etc/receptor/tls/receptor.crt
    key: /etc/receptor/tls/receptor.key
    rootcas: /etc/receptor/tls/ca/mesh-CA.crt
    insecureskipverify: false
    mintls13: {{ receptor_mintls13 | bool }}
{% endif %}

{% if not receptor_disable_signing | bool %}
{% if _receptor_type in ['control', 'hybrid'] %}
- work-signing:
    privatekey: /etc/receptor/signing_private.pem
    tokenexpiration: 1m
{% endif %}

{% if _receptor_type in ['control', 'execution', 'hybrid'] %}
- work-verification:
    publickey: /etc/receptor/signing_public.pem
{% endif %}
{% endif %}

{% if groups['automationcontroller'] | length == 1 and groups.get('execution_nodes', []) | length == 0 %}
- local-only:
{% else %}
- {{ receptor_protocol }}-listener:
    port: {{ receptor_port }}
{% if not receptor_disable_tls | bool %}
    tls: tls_server
{% endif %}
{% endif %}

{% if _receptor_peers | length > 0 %}
{% for node in _receptor_peers %}
- {{ hostvars[node]['_receptor_protocol'] }}-peer:
    address: {{ hostvars[node]['_receptor_hostname'] }}:{{ hostvars[node]['_receptor_port'] }}
    redial: true
{% if not receptor_disable_tls | bool %}
    tls: tls_client
{% endif %}
{% endfor %}
{% endif %}

{% if receptor_type in ['control', 'execution', 'hybrid'] %}
- work-command:
{% if receptor_type in ['control', 'hybrid'] %}
    worktype: local
{% else %}
    worktype: ansible-runner
{% endif %}
    command: ansible-runner
    params: worker
    allowruntimeparams: true
{% if not receptor_disable_signing | bool %}
    verifysignature: true
{% endif %}
{% endif %}

{% if receptor_type in ['control', 'hybrid'] %}
- work-kubernetes:
    worktype: kubernetes-runtime-auth
    authmethod: runtime
    allowruntimeauth: true
    allowruntimepod: true
    allowruntimeparams: true
{% if not receptor_disable_signing | bool %}
    verifysignature: true
{% endif %}

- work-kubernetes:
    worktype: kubernetes-incluster-auth
    authmethod: incluster
    allowruntimeauth: true
    allowruntimepod: true
    allowruntimeparams: true
{% if not receptor_disable_signing | bool %}
    verifysignature: true
{% endif %}
{% endif %}