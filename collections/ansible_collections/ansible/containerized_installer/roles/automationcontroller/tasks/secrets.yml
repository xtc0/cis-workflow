---
- name: Get all podman secrets
  containers.podman.podman_secret_info:
  register: _secrets

- name: Get the existing controller websocket secret
  containers.podman.podman_container:
    name: controller-websocket-secret
    image: '{{ _controller_image }}'
    command: cat /run/secrets/controller_channels
    detach: false
    rm: true
    secrets: ['controller_channels']
  register: _controller_channels
  no_log: true
  run_once: true
  changed_when: false
  when: _secrets.secrets | map(attribute='Spec') | selectattr('Name', 'equalto', 'controller_channels') | length > 0

- name: Set the controller channels secret fact
  ansible.builtin.set_fact:
    __controller_channels: '{{ _controller_channels.stdout | default(_secret_generated) }}'
  vars:
    _secret_generated: 'BROADCAST_WEBSOCKET_SECRET = "{{ lookup("ansible.builtin.password", "/dev/null length=128") | b64encode }}"'
  no_log: true
  run_once: true

- name: Get the existing controller secret key secret
  containers.podman.podman_container:
    name: controller-secret-key-secret
    image: '{{ _controller_image }}'
    command: cat /run/secrets/controller_secret_key
    detach: false
    rm: true
    secrets: ['controller_secret_key']
  register: _controller_secret_key
  no_log: true
  run_once: true
  changed_when: false
  when: _secrets.secrets | map(attribute='Spec') | selectattr('Name', 'equalto', 'controller_secret_key') | length > 0

- name: Set the controller secret key secret fact
  ansible.builtin.set_fact:
    __controller_secret_key: '{{ _controller_secret_key.stdout | default(controller_secret_key) | default(_key_generated) }}'
  vars:
    _key_generated: '{{ lookup("ansible.builtin.password", "/dev/null length=50") }}'
  no_log: true
  run_once: true

- name: Get the existing controller resource server secret
  containers.podman.podman_container:
    name: controller-resource-server-secret
    image: '{{ _controller_image }}'
    command: cat /run/secrets/controller_resource_server
    detach: false
    rm: true
    secrets: ['controller_resource_server']
  register: _controller_resource_server
  no_log: true
  run_once: true
  changed_when: false
  when: _secrets.secrets | map(attribute='Spec') | selectattr('Name', 'equalto', 'controller_resource_server') | length > 0

- name: Set the controller resource server secret fact
  ansible.builtin.set_fact:
    __controller_resource_server: '{{ _controller_resource_server.stdout | default(_resource_server_generated) }}'
  vars:
    _resource_server_generated: '{{ lookup("ansible.builtin.template", "resource_server.py.j2") }}'
  no_log: true
  run_once: true

- name: Create the controller channels secret
  containers.podman.podman_secret:
    name: controller_channels
    data: '{{ __controller_channels }}'
    skip_existing: true
  notify:
    - Restart controller rsyslog
    - Restart controller task
    - Restart controller web

- name: Create the controller postgres secret
  containers.podman.podman_secret:
    name: controller_postgres
    data: '{{ lookup("ansible.builtin.template", "postgres.py.j2") }}'
    skip_existing: '{{ _podman_idempotence | ternary(omit, true) }}'
    force: '{{ _podman_idempotence | ternary(omit, true) }}'
  notify:
    - Restart controller rsyslog
    - Restart controller task
    - Restart controller web

- name: Create the controller SECRET_KEY secret
  containers.podman.podman_secret:
    name: controller_secret_key
    data: '{{ __controller_secret_key }}'
    skip_existing: true
  notify:
    - Restart controller rsyslog
    - Restart controller task
    - Restart controller web

- name: Create the controller resource server secret
  containers.podman.podman_secret:
    name: controller_resource_server
    data: '{{ __controller_resource_server }}'
    skip_existing: true
  notify:
    - Restart controller rsyslog
    - Restart controller task
    - Restart controller web

- name: Get all podman secrets after update
  containers.podman.podman_secret_info:
  register: _secrets_update

- name: Set controller recreate container fact
  ansible.builtin.set_fact:
    __controller_recreate: '{{ _controller_before | difference(_controller_after) | length > 0 }}'
  vars:
    _controller_before: '{{ _secrets.secrets | map(attribute="ID") }}'
    _controller_after: '{{ _secrets_update.secrets | map(attribute="ID") }}'
...
