#jinja2: lstrip_blocks: True

# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

worker_processes auto;
pid /run/nginx/nginx.pid;
error_log  /dev/stdout error;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {

    log_format  main  '"$time_local" client=$remote_addr '
                      'method=$request_method request="$request" '
                      'request_length=$request_length '
                      'status=$status bytes_sent=$bytes_sent '
                      'body_bytes_sent=$body_bytes_sent '
                      'referer=$http_referer '
                      'user_agent="$http_user_agent" '
                      'upstream_addr=$upstream_addr '
                      'upstream_status=$upstream_status '
                      'request_time=$request_time '
                      'upstream_response_time=$upstream_response_time '
                      'upstream_connect_time=$upstream_connect_time '
                      'upstream_header_time=$upstream_header_time '
                      'request_id="$http_x_request_id"';

    access_log  /dev/stdout  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;
    server_tokens       off;
    types {
        application/manifest+json webmanifest;
    }


    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    upstream uwsgi {
        server 127.0.0.1:{{ gateway_uwsgi_port }};
    }

    server {
        {% if not gateway_nginx_disable_https | bool %}
        listen {{ gateway_nginx_https_port }} default_server ssl http2;
        {% if ansible_all_ipv6_addresses | length > 0 %}
        listen [::]:{{ gateway_nginx_https_port }} default_server ssl http2;
        {% endif %}
        {% else %}
        listen {{ gateway_nginx_http_port }} default_server;
        {% if ansible_all_ipv6_addresses | length > 0 %}
        listen [::]:{{ gateway_nginx_http_port }} default_server;
        {% endif %}
        {% endif %}

        server_name _;

        keepalive_timeout 65;

        client_max_body_size {{ gateway_nginx_client_max_body_size }};

        {% if not gateway_nginx_disable_https | bool %}
        ssl_certificate /etc/ansible-automation-platform/gateway/gateway.crt;
        ssl_certificate_key /etc/ansible-automation-platform/gateway/gateway.key;

        ssl_session_timeout 1d;
        ssl_session_cache shared:SSL:50m;
        ssl_session_tickets off;

        ssl_protocols {{ gateway_nginx_https_protocols | join(' ') }};
        # RHEL system crypto policy
        ssl_ciphers PROFILE=SYSTEM;
        ssl_prefer_server_ciphers on;
        {% endif %}



        {% if not gateway_nginx_disable_hsts | bool %}
        # HSTS (ngx_http_headers_module is required, max-age in seconds)
        add_header Strict-Transport-Security max-age={{ gateway_nginx_hsts_max_age }};
        {% endif %}
        # headers added with gateway_nginx_user_headers variable
{% for header in gateway_nginx_user_headers %}
        add_header {{ header }};
{% endfor %}
        # end of headers added with gateway_nginx_user_headers variable
       
        add_header X-Content-Type-Options nosniff;

        gzip on;
        gzip_comp_level 6;
        gzip_proxied any;
        gzip_types text/css text/javascript text/plain text/xml application/javascript application/json application/xml;
        gzip_vary on;

        # Redirect trailing slash for eda root
        location = /api/eda {
            return 301 $scheme://$host/api/eda/;
        }

        # API Static files
        location ^~ /static/ {
            alias /var/lib/ansible-automation-platform/platform/ui/static/;
        }

        # API endpoints
        location ~* /(v3|api|o)/ {
            uwsgi_pass uwsgi;
            include /etc/nginx/uwsgi_params;
        }

        # UI files
        location ~* \.(json|woff|woff2|jpe?g|png|gif|ico|svg|css|js)$ {
            root /var/lib/ansible-automation-platform/platform/ui;
            add_header Cache-Control "public, max-age=31536000, s-maxage=31536000, immutable";
            try_files $uri =404;
        }

        # UI root
        location / {
            root /var/lib/ansible-automation-platform/platform/ui;
            autoindex off;
            expires off;
            add_header Cache-Control "public, max-age=0, s-maxage=0, must-revalidate" always;
            try_files $uri /index.html =404;
        }
    }
}
