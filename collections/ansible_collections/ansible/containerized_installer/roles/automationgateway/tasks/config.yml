---
- name: Create the gateway directories
  ansible.builtin.file:
    path: '{{ item }}'
    mode: '0770'
    state: directory
  loop:
    - '{{ envoy_conf_dir }}'
    - '{{ gateway_nginx_conf_dir }}'
    - '{{ gateway_conf_dir }}'

- name: Create the envoy configuration
  ansible.builtin.template:
    src: envoy.yaml.j2
    dest: '{{ envoy_conf_dir }}/envoy.yaml'
    mode: '0640'
  notify: Restart automation gateway proxy

- name: Check current somaxconn value
  ansible.builtin.slurp:
    src: /proc/sys/net/core/somaxconn
  register: somaxconn

- name: Check current net.ipv4.tcp_max_syn_backlog value
  ansible.builtin.slurp:
    src: /proc/sys/net/ipv4/tcp_max_syn_backlog
  register: tcp_max_syn_backlog

- name: Set somaxconn to value greater than or equal to gateway_uwsgi_listen_queue_size in supervisor config
  ansible.posix.sysctl:
    name: net.core.somaxconn
    value: "{{ gateway_uwsgi_listen_queue_size }}"
    sysctl_set: true
  become: true
  when: (gateway_uwsgi_listen_queue_size | int) > (somaxconn['content'] | b64decode | int)

- name: Set tcp_max_syn_backlog to value greater than or equal to gateway_uwsgi_listen_queue_size in supervisor config
  ansible.posix.sysctl:
    name: net.ipv4.tcp_max_syn_backlog
    value: "{{ gateway_uwsgi_listen_queue_size }}"
    sysctl_set: true
  become: true
  when: (gateway_uwsgi_listen_queue_size | int) > (tcp_max_syn_backlog['content'] | b64decode | int)

- name: Create the uwsgi configuration
  ansible.builtin.template:
    src: uwsgi.ini.j2
    dest: '{{ gateway_conf_dir }}/uwsgi.ini'
    mode: '0640'
  notify: Restart automation gateway

- name: Create the gateway django settings override file
  ansible.builtin.template:
    src: settings.py.j2
    dest: '{{ gateway_conf_dir }}/settings.py'
    mode: '0640'
  notify: Restart automation gateway
...
