---
- name: Preflight checks
  hosts: localhost
  gather_facts: false
  connection: local
  become: false
  tasks:
    - name: Gather facts
      ansible.builtin.setup:

    - name: Get ostree fact
      ansible.builtin.import_role:
        name: common
        tasks_from: ostree.yml

    - name: Run variable preflight checks
      ansible.builtin.import_role:
        name: preflight

- name: Preflight node checks
  hosts: automationcontroller:automationeda:automationgateway:automationhub:database:execution_nodes:redis
  any_errors_fatal: true
  gather_facts: false
  become: false
  tasks:
    - name: Gather facts
      ansible.builtin.setup:
      become: true

    - name: Gather regular user id, uid and home dir
      ansible.builtin.setup:
        filter:
          - 'ansible_user_id'
          - 'ansible_user_uid'
          - 'ansible_user_dir'

    - name: Run node preflight checks
      ansible.builtin.import_role:
        name: preflight
        tasks_from: nodes.yml

- name: Install common container components
  hosts: automationcontroller:automationeda:automationgateway:automationhub:database:execution_nodes:redis
  any_errors_fatal: true
  gather_facts: false
  become: false
  tasks:
    - name: Install and configure podman
      ansible.builtin.import_role:
        name: common

- name: Install the database
  hosts: database
  any_errors_fatal: true
  gather_facts: false
  become: false
  tasks:
    - name: Install and configure postgresql
      ansible.builtin.import_role:
        name: postgresql

- name: Install redis cluster cache
  hosts: redis
  any_errors_fatal: true
  gather_facts: false
  become: false
  tasks:
    - name: Install and configure redis cluster tcp socket
      ansible.builtin.include_role:
        name: redis
      vars:
        redis_unix_socket: false
        redis_cluster: true
      when: redis_mode | default('cluster') == 'cluster'

- name: Install the redis cache
  hosts: automationcontroller:automationeda:automationgateway:automationhub
  any_errors_fatal: true
  gather_facts: false
  become: false
  tasks:
    - name: Install and configure redis unix socket
      ansible.builtin.include_role:
        name: redis
      when: >
        inventory_hostname in groups.get('automationcontroller', []) or
        inventory_hostname in groups.get('automationhub', []) or
        (inventory_hostname in groups.get('automationeda', []) and groups.get('automationeda', []) | length == 1)

    - name: Install and configure redis tcp socket
      ansible.builtin.include_role:
        name: redis
      vars:
        redis_unix_socket: false
      when:
        - redis_mode | default('cluster') == 'standalone'
        - inventory_hostname == groups['automationgateway'] | first

- name: Get Automation Controller configuration for gateway
  hosts: automationcontroller
  any_errors_fatal: true
  gather_facts: false
  become: false
  tasks:
    - name: Set automation controller facts
      ansible.builtin.import_role:
        name: automationcontroller
        tasks_from: facts.yml

- name: Get Automation EDA configuration for gateway
  hosts: automationeda
  any_errors_fatal: true
  gather_facts: false
  become: false
  tasks:
    - name: Set automation eda facts
      ansible.builtin.import_role:
        name: automationeda
        tasks_from: facts.yml

- name: Get Automation Hub configuration for gateway
  hosts: automationhub
  any_errors_fatal: true
  gather_facts: false
  become: false
  tasks:
    - name: Set automation hub facts
      ansible.builtin.import_role:
        name: automationhub
        tasks_from: facts.yml

- name: Install the Automation Gateway
  hosts: automationgateway
  any_errors_fatal: true
  gather_facts: false
  become: false
  tasks:
    - name: Install and configure Automation Gateway
      ansible.builtin.import_role:
        name: automationgateway

- name: Run the Automation Gateway postinstall
  hosts: automationgateway
  any_errors_fatal: true
  gather_facts: false
  become: false
  tasks:
    - name: Configure automation gateway proxy resources
      ansible.builtin.import_role:
        name: automationgateway
        tasks_from: postinstall.yml

- name: Install and configure receptor
  hosts: automationcontroller:execution_nodes
  any_errors_fatal: true
  gather_facts: false
  become: false
  tasks:
    - name: Install and configure receptor
      ansible.builtin.import_role:
        name: receptor

- name: Install the Automation Controller
  any_errors_fatal: true
  hosts: automationcontroller
  gather_facts: false
  become: false
  tasks:
    - name: Install and configuration automation controller
      ansible.builtin.import_role:
        name: automationcontroller

- name: Install the Automation EDA
  any_errors_fatal: true
  hosts: automationeda
  gather_facts: false
  become: false
  tasks:
    - name: Install and configuration automation eda
      ansible.builtin.import_role:
        name: automationeda

- name: Install the Automation Hub
  any_errors_fatal: true
  hosts: automationhub
  gather_facts: false
  become: false
  tasks:
    - name: Install and configuration automation hub
      ansible.builtin.import_role:
        name: automationhub

- name: Merge components organization to gateway
  hosts: automationgateway
  any_errors_fatal: true
  gather_facts: false
  become: false
  tasks:
    - name: Set automation gateway facts
      ansible.builtin.import_role:
        name: automationgateway
        tasks_from: facts.yml

    - name: Migrate component resources
      ansible.builtin.include_role:
        name: automationgateway
        tasks_from: migrate.yml
        apply:
          run_once: true

- name: Trust the Automation Hub registry
  hosts: automationcontroller:automationeda:execution_nodes
  any_errors_fatal: true
  gather_facts: false
  become: false
  tasks:
    - name: Add TLS CA to podman configuration
      ansible.builtin.import_role:
        name: common
        tasks_from: hub_registry.yml
      when: groups.get('automationhub', []) | length > 0

- name: Install and configure performance co-pilot (pcp)
  hosts: automationcontroller:automationhub:automationeda:automationgateway:database:redis
  any_errors_fatal: true
  gather_facts: false
  become: false
  tasks:
    - name: Install and configure pcp
      ansible.builtin.import_role:
        name: pcp
      when: setup_monitoring | default(false) | bool

- name: Run the Automation Controller postinstall
  hosts: automationcontroller
  any_errors_fatal: true
  gather_facts: false
  become: false
  tasks:
    - name: Upload EE images to Automation Hub
      ansible.builtin.import_role:
        name: automationhub
        tasks_from: upload_images.yml
      vars:
        __images: '{{ __ee_images }}'
      when: groups.get('automationhub', []) | length > 0

    - name: Configure automation controller resources
      ansible.builtin.import_role:
        name: automationcontroller
        tasks_from: postinstall.yml
      when: controller_postinstall | default(false) | bool

- name: Run the Automation EDA postinstall
  hosts: automationeda
  gather_facts: false
  become: false
  tasks:
    - name: Upload DE images to Automation Hub
      ansible.builtin.import_role:
        name: automationhub
        tasks_from: upload_images.yml
      vars:
        __images: '{{ __de_images }}'
      when: groups.get('automationhub', []) | length > 0

- name: Run the Automation Hub postinstall
  hosts: automationhub
  any_errors_fatal: true
  gather_facts: false
  become: false
  tasks:
    - name: Upload ansible collections to Automation Hub
      ansible.builtin.import_role:
        name: automationhub
        tasks_from: upload_collections.yml
      when:
        - bundle_install | default(false) | bool
        - hub_seed_collections | default(true) | bool

    - name: Configure automation hub resources
      ansible.builtin.import_role:
        name: automationhub
        tasks_from: postinstall.yml
      when: hub_postinstall | default(false) | bool

- name: Delete the ansible base shared secret
  hosts: automationcontroller:automationeda:automationgateway:automationhub
  any_errors_fatal: true
  gather_facts: false
  become: false
  tasks:
    - name: Delete the ansible base shared secret
      containers.podman.podman_secret:
        name: ansible_base_shared_secret
        state: absent
...
