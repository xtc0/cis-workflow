---
- name: Preset vars
  set_fact:
    gateway_configuration_organizations_secure_logging: false
    gateway_configuration_users_secure_logging: false
    gateway_user_default_password: "change-me"
    name_prefix: "GW-Collection-Test-Lookup"
- block:

  - block:
    - name: Create Users
      include_role:
        name: ansible.gateway_configuration.users
      vars:
        gateway_users:
          - username: "{{ name_prefix }}-User-1"
          - username: "{{ name_prefix }}-User-2"
          - username: "{{ name_prefix }}-Admin-1"
            is_superuser: True
    - debug:
        var: __gateway_user_accounts_job_async_result
    - name: Set Users var
      set_fact:
        _users: "{{ __gateway_user_accounts_job_async_result.results }}"

    - name: Assert Users
      assert:
        that:
        - _users[0] is changed
        - _users[1] is changed
        - _users[2] is changed

    - name: Create Organizations
      include_role:
        name: ansible.gateway_configuration.organizations
      vars:
        gateway_organizations:
        - name: "{{ name_prefix }}-Org-1"
        - name: "{{ name_prefix }}-Org-2"
          description: "{{ name_prefix }}-Org-2-Description"
    - debug:
        var: __gateway_organizations_job_async_result
    - name: Set Organizations var
      set_fact:
        _organizations: "{{ __gateway_organizations_job_async_result.results }}"

    - name: Assert Create Organizations passed
      assert:
        that:
          - _organizations[0] is changed
          - _organizations[1] is changed

    - name: Assign Admins by Role User Assignments
      include_role:
        name: ansible.gateway_configuration.role_user_assignments
      vars:
        gateway_role_user_assignments:
        - role_definition: Organization Admin
          user: "{{ _users[1].id }}"
          object_id: "{{ _organizations[0].id }}"
        - role_definition: Organization Admin
          user: "{{ _users[2].id }}"
          object_id: "{{ _organizations[0].id }}"
  - block:
    - name: Do queries
      set_fact:
        _org2: "{{ lookup('ansible.gateway_configuration.gateway_api', 'organizations', query_params={'description': name_prefix + '-Org-2-Description'}, host=gateway_hostname, username=gateway_username, password=gateway_password, verify_ssl=gateway_validate_certs) }}"
        _users: "{{ query('ansible.gateway_configuration.gateway_api', 'users', query_params={ 'username__startswith': name_prefix, 'order_by': 'username' }, host=gateway_hostname, username=gateway_username, password=gateway_password, verify_ssl=gateway_validate_certs) }}"
        _admins: "{{ query('ansible.gateway_configuration.gateway_api', 'organizations/' + (_organizations[0].id|string) + '/admins/', query_params={ 'username__startswith': name_prefix, 'order_by': 'username' }, host=gateway_hostname, username=gateway_username, password=gateway_password, verify_ssl=gateway_validate_certs) }} "

    - name: Check Org 2
      assert:
        that:
          _org2.name == _organizations[1].name

    - name: Print users
      debug:
        var: _users
    - name: Check all Users
      assert:
        that:
        - _users | length == 3
        - _users[0].username == "GW-Collection-Test-Lookup-Admin-1"
        - _users[1].username == "GW-Collection-Test-Lookup-User-1"
        - _users[2].username == "GW-Collection-Test-Lookup-User-2"
    - name: Print Org-1 admins
      debug:
        var: _admins
    - name: Check Org-1 Admins
      assert:
        that:
        - _admins | length == 2
        - _admins[0].username == "GW-Collection-Test-Lookup-Admin-1"
        - _admins[1].username == "GW-Collection-Test-Lookup-User-2"
        - _admins[1].password == "$encrypted$"

  - block:
    - name: Expect One - Get 0
      set_fact:
        _users: "{{ lookup('ansible.gateway_configuration.gateway_api', 'users', query_params={ 'username': name_prefix + '-NonExisting-1' }, host=gateway_hostname, username=gateway_username, password=gateway_password, verify_ssl=gateway_validate_certs, expect_one=true) }}"
    rescue:
    - name: Rescue from Expect One - Get 0
      failed_when: '"Expected one object from endpoint users, but obtained 0 from API" not in ansible_failed_result.msg'
      debug:
        msg: "Lookup with zero results with expect_one=true raised error as expected"

  - block:
    - name: Expect One - Get 3
      set_fact:
        _users: "{{ query('ansible.gateway_configuration.gateway_api', 'users', query_params={ 'username__startswith': name_prefix }, host=gateway_hostname, username=gateway_username, password=gateway_password, verify_ssl=gateway_validate_certs, expect_one=true) }}"
    rescue:
    - name: Rescue from Expect One - Get 3
      failed_when: '"Expected one object from endpoint users, but obtained 3 from API" not in ansible_failed_result.msg'
      debug:
        msg: "Lookup with 3 results with expect_one=true raised error as expected"

  # <Cleanup>
  always:
  - name: Delete Organizations
    include_role:
      name: ansible.gateway_configuration.organizations
    vars:
      gateway_state: absent
      gateway_organizations:
        - name: "{{ name_prefix }}-Org-1"
        - name: "{{ name_prefix }}-Org-2"
  - name: Delete Users
    include_role:
      name: ansible.gateway_configuration.users
    vars:
      gateway_state: absent
      gateway_users:
        - username: "{{ name_prefix }}-User-1"
        - username: "{{ name_prefix }}-User-2"
        - username: "{{ name_prefix }}-Admin-1"
