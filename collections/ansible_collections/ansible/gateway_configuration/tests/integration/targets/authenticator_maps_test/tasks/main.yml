---
- name: Preset vars
  set_fact:
    gateway_configuration_authenticator_maps_secure_logging: false
    gateway_configuration_authenticators_secure_logging: false
    name_prefix: "GW-Collection-Test-AuthenticatorMaps"

- block:
  # <Authenticators> ----------------------------
  - name: Create Authenticators
    include_role:
      name: ansible.gateway_configuration.authenticators
    vars:
      gateway_authenticators:
      - name: "{{ name_prefix}}-Authenticator-1"
        slug: "{{ name_prefix}}-Authenticator-1"
        type: "ansible_base.authentication.authenticator_plugins.local"
        configuration: {}
      - name: "{{ name_prefix}}-Authenticator-2"
        slug: "{{ name_prefix}}-Authenticator-2"
        type: "ansible_base.authentication.authenticator_plugins.local"
        configuration: {}
  - debug:
      var: __gateway_authenticators_job_async_result
  - name: Set Authenticators var
    set_fact:
      _authenticators: "{{ __gateway_authenticators_job_async_result.results }}"
  - name: Assert Create Authenticators passed
    assert:
      that:
      - _authenticators[0] is changed
      - _authenticators[1] is changed
  # </Authenticators> ---------------------------

  # <Authenticator Maps> ------------------------
  - name: Create Authenticator Maps
    include_role:
      name: ansible.gateway_configuration.authenticator_maps
    vars:
      gateway_authenticator_maps:
      - name: "{{ name_prefix }}-AMap-1"
        authenticator: "{{ name_prefix }}-Authenticator-1"
        revoke: false
        map_type: organization
        role: Organization Member
        organization: "Organization 1"
        triggers:
          always: {}
          never: {}
        order: 10
      - name: "{{ name_prefix }}-AMap-2"
        authenticator: "{{ _authenticators[0].id }}"
        revoke: true
        map_type: team
        role: Team Admin
        team: "Team 2"
        organization: "Organization 1"
        triggers:
          groups:
            has_or:
              - group1
              - group2
            has_and:
              - group3
              - group4
        order: 2
      - name: "{{ name_prefix }}-AMap-3"
        authenticator: "{{ _authenticators[1].name }}"
        map_type: allow
        triggers:
          attributes:
            join_condition: "or"
            attr_1:
              contains: "redhat"
              matches: "ansible"
              ends_with: "best"
            attr_2:
              in:
              - ansible
              - automation
              - gateway
        order: 10
  - debug:
      var: __gateway_authenticator_maps_job_async_result
  - name: Set Authenticators var
    set_fact:
      _authenticator_maps: "{{ __gateway_authenticator_maps_job_async_result.results }}"

  - name: Assert Create Authenticator Maps passed
    assert:
      that:
        - _authenticator_maps[0] is changed
        - _authenticator_maps[1] is changed
        - _authenticator_maps[2] is changed

  - name: Check/Change Authenticator Maps
    include_role:
      name: ansible.gateway_configuration.authenticator_maps
    vars:
      gateway_authenticator_maps:
      # Check existence
      - name: "{{ name_prefix }}-AMap-1"
        authenticator: "{{ name_prefix }}-Authenticator-1"
        state: exists
      - name: "{{ _authenticator_maps[0].id }}"
        authenticator: "{{ _authenticators[0].id }}"
        state: exists
      - name: "{{ _authenticator_maps[0].name }}"
        authenticator: "{{ _authenticators[0].name }}"
        map_type: organization  # doesn't affect object when state=='exists'
        organization: "Organization X" # doesn't affect object when state=='exists'
        state: exists
      # No change
      - name: "{{ name_prefix }}-AMap-1"
        authenticator: "{{ _authenticators[0].id }}"
        revoke: false
        map_type: organization
        organization: "Organization 1"
        triggers:
          always: {}
          never: {}
        state: present
      # Changed
      - name: "{{ name_prefix }}-AMap-2"
        authenticator: "{{ _authenticators[0].id }}"
        revoke: false
      # Changed json
      - name: "{{ name_prefix }}-AMap-3"
        authenticator: "{{ _authenticators[1].name }}"
        triggers:
          attributes:  # replace of attributes
            join_condition: "and"
            attr_2:
              in:
              - base
      # Check absence by wrong name
      - name: "{{ name_prefix }}-AMap-NonExisting"
        authenticator: "{{ _authenticators[0].id }}"
        state: absent
      # Check absence by wrong authenticator
      - name: "{{ _authenticator_maps[0].id }}"
        authenticator: "{{ name_prefix }}-Authenticator-NonExisting"
        state: absent
  - debug:
      var: __gateway_authenticator_maps_job_async_result
  - name: Assert Check/Change Authenticator Maps passed
    assert:
      that:
        - __gateway_authenticator_maps_job_async_result.results[0] is not changed
        - __gateway_authenticator_maps_job_async_result.results[1] is not changed
        - __gateway_authenticator_maps_job_async_result.results[2] is not changed
        - __gateway_authenticator_maps_job_async_result.results[3] is not changed
        - __gateway_authenticator_maps_job_async_result.results[4] is changed
        - __gateway_authenticator_maps_job_async_result.results[5] is changed
        - __gateway_authenticator_maps_job_async_result.results[6] is not changed
        - __gateway_authenticator_maps_job_async_result.results[7] is not changed

  - name: Change Unique Key
    include_role:
      name: ansible.gateway_configuration.authenticator_maps
    vars:
      gateway_authenticator_maps:
      - name: "{{ name_prefix }}-AMap-1"
        new_name: "{{ name_prefix }}-AMap-1-New"
        authenticator: "{{ _authenticators[0].id }}"
      - name: "{{ _authenticator_maps[1].id }}"
        authenticator: "{{ _authenticators[0].id }}"
        new_authenticator: "{{ _authenticators[1].id }}"

  - name: Assert Change Unique Key passed
    assert:
      that:
      - __gateway_authenticator_maps_job_async_result.results[0] is changed
      - __gateway_authenticator_maps_job_async_result.results[1] is changed

  - name: Check Unique Key changes
    include_role:
      name: ansible.gateway_configuration.authenticator_maps
    vars:
      gateway_authenticator_maps:
      - name: "{{ name_prefix }}-AMap-1"
        authenticator: "{{ _authenticators[0].id }}"
        state: absent
      - name: "{{ name_prefix }}-AMap-1-New"
        authenticator: "{{ _authenticators[0].id }}"
        state: exists
      - name: "{{ _authenticator_maps[1].id }}"
        authenticator: "{{ _authenticators[0].id }}"
        state: absent
      - name: "{{ _authenticator_maps[1].id }}"
        authenticator: "{{ _authenticators[1].id }}"
        state: exists

  - name: Assert Check Unique key changes passed
    assert:
      that:
        - __gateway_authenticator_maps_job_async_result.results[0] is not changed
        - __gateway_authenticator_maps_job_async_result.results[1] is not changed
        - __gateway_authenticator_maps_job_async_result.results[2] is not changed
        - __gateway_authenticator_maps_job_async_result.results[3] is not changed
  # </Authenticator Maps> -----------------------

  # <Cleanup> -----------------------------------
  always:
  - name: Delete Authenticator Maps
    include_role:
      name: ansible.gateway_configuration.authenticator_maps
    vars:
      gateway_state: absent
      gateway_authenticator_maps:
      - name: "{{ name_prefix }}-AMap-1"
        authenticator: "{{ name_prefix }}-Authenticator-1"
      - name: "{{ name_prefix }}-AMap-1-New"
        authenticator: "{{ name_prefix }}-Authenticator-1"
      - name: "{{ name_prefix }}-AMap-2"
        authenticator: "{{ name_prefix }}-Authenticator-1"
      - name: "{{ name_prefix }}-AMap-2"
        authenticator: "{{ name_prefix }}-Authenticator-2"
      - name: "{{ name_prefix }}-AMap-3"
        authenticator: "{{ name_prefix }}-Authenticator-2"

  - name: Delete Authenticators
    include_role:
      name: ansible.gateway_configuration.authenticators
    vars:
      gateway_state: absent
      gateway_authenticators:
      - name: "{{ name_prefix}}-Authenticator-1"
      - name: "{{ name_prefix}}-Authenticator-2"

# <Error block> ---------------------------------
- name: Error block 1
  block:
  - name: Create Authenticators
    include_role:
      name: ansible.gateway_configuration.authenticators
    vars:
      gateway_authenticators:
      - name: "{{ name_prefix}}-Authenticator-1"
        slug: "{{ name_prefix}}-Authenticator-1"
        type: "ansible_base.authentication.authenticator_plugins.local"
        configuration: {}
  - name: Set Authenticators var
    set_fact:
      _authenticators: "{{ __gateway_authenticators_job_async_result.results }}"
  - name: Assert Create Authenticators passed
    assert:
      that:
      - _authenticators[0] is changed

  - name: Create Incomplete Authenticator Map
    include_role:
      name: ansible.gateway_configuration.authenticator_maps
    vars:
      gateway_authenticator_maps:
      - name: "{{ name_prefix }}-Authenticator_Maps-1"
        authenticator: "{{ _authenticators[0].id }}"
        map_type: team
  rescue:
  - name: Rescue from Create Incomplete Authenticator Map
    when: "ansible_failed_result.results[0].msg == 'map_type is team but all of the following are missing: team, organization'"
    debug:
      msg: Successfully rescued from Create Incomplete Authenticator Map
  always:
  - name: Delete Authenticator Map
    include_role:
      name: ansible.gateway_configuration.authenticator_maps
    vars:
      gateway_state: absent
      gateway_authenticator_maps:
      - name: "{{ name_prefix }}-Authenticator_Maps-1"
        authenticator: "{{ _authenticators[0].id }}"
  - name: Delete Authenticators
    include_role:
      name: ansible.gateway_configuration.authenticators
    vars:
      gateway_state: absent
      gateway_authenticators:
      - name: "{{ name_prefix}}-Authenticator-1"
